{% if gitlab__ssl_cert_file is defined and gitlab__ssl_cert_file|length>5 and gitlab__ssl_cert_key_file is defined and gitlab__ssl_cert_key_file|length>5 %}
external_url 'https://{{ gitlab__hostname }}{% if gitlab__port_web_https != '443' %}:{{ gitlab__port_web_https }}{% endif %}'
{% else %}
external_url 'http://{{ gitlab__hostname }}{% if gitlab__port_web_http != '80' %}:{{ gitlab__port_web_http }}{% endif %}'
{% endif %}

gitlab_rails['lfs_enabled'] = true

# Dont set internal Nginx config, we use seperate Nginx container
nginx['listen_port'] = {{ gitlab__port_web_http }}
{% if gitlab__ssl_cert_file is defined and gitlab__ssl_cert_file|length>5 and gitlab__ssl_cert_key_file is defined and gitlab__ssl_cert_key_file|length>5 %}
nginx['listen_https'] = true
nginx['redirect_http_to_https'] = true
nginx['proxy_set_headers'] = {
  "X-Forwarded-Proto" => "https",
  "X-Forwarded-Ssl" => "on"
}
nginx['ssl_certificate'] = "{{ gitlab__ssl_cert_file }}"
nginx['ssl_certificate_key'] = "{{ gitlab__ssl_cert_key_file }}"
{% else %}
nginx['listen_https'] = false
{% endif %}

# Enable termination of ProxyProtocol by NGINX (used with HAProxy)
# nginx['proxy_protocol'] = true
# Configure trusted upstream proxies. Required if `proxy_protocol` is enabled.
nginx['real_ip_trusted_addresses'] = {{ gitlab__proxy_real_ip_trusted_addresses | list }}

# Set referrer polocy
nginx['referrer_policy'] = 'strict-origin-when-cross-origin'

# Docker registery
{% if gitlab__registery_enable == true %}
{% if gitlab__registery_ssl_cert_file is defined and gitlab__registery_ssl_cert_file|length>5 and gitlab__ssl_cert_key_file is defined and gitlab__ssl_cert_key_file|length>5 %}
registry_external_url 'https://{{ gitlab__registery_hostname }}:{{ gitlab__registery_port }}'
{% else %}
registry_external_url 'http://{{ gitlab__registery_hostname }}:{{ gitlab__registery_port }}'
{% endif %}

registry_nginx['enable'] = true
registry_nginx['listen_port'] = {{ gitlab__registery_port }}
{% if gitlab__registery_ssl_cert_path is defined and gitlab__registery_ssl_cert_path|length>5 %}
registry_nginx['ssl_certificate'] = "{{ gitlab__registery_ssl_cert_file }}"
{% endif %}
{% if gitlab__registery_ssl_cert_key_path is defined and gitlab__registery_ssl_cert_key_path|length>5 %}
registry_nginx['ssl_certificate_key'] = "{{ gitlab__registery_ssl_cert_key_file }}"
{% endif %}


{% endif %}

# LDAP CONFIG
{% if gitlab__ldap_server_host_ip is defined and gitlab__ldap_server_host_port is defined %}
# LDAP
gitlab_rails['ldap_enabled'] = true
gitlab_rails['prevent_ldap_sign_in'] = false

##! **remember to close this block with 'EOS' below**
gitlab_rails['ldap_servers'] = YAML.load <<-'EOS'
  main: # 'main' is the GitLab 'provider ID' of this LDAP server
    label: '{{ gitlab__ldap_server_label }}'
    host: '{{ gitlab__ldap_server_host_ip }}'
    port: '{{ gitlab__ldap_server_host_port }}'
    uid: '{{ gitlab__ldap_uid }}' #'uid' # 'sAMAccountName'
    bind_dn: '{{ gitlab__ldap_auth_bind_dn }}'
    password: '{{ gitlab__ldap_auth_bind_pass }}'
    encryption: '{{ gitlab__ldap_server_encryption }}' # 'plain' 
    verify_certificates: '{{ gitlab__ldap_server_verify_certificates }}'
    smartcard_auth: false
    active_directory: '{{ gitlab__ldap_is_ad | default(false) }}'
    allow_username_or_email_login: '{{ gitlab__ldap_allow_username_or_email_login | default(true) }}'
    lowercase_usernames: '{{  gitlab__ldap_lowercase_usernames }}'
    block_auto_created_users: '{{  gitlab__ldap_block_auto_created_users }}'
    base: '{{ gitlab__ldap_search_base }}'
{% if gitlab__ldap_user_filter and gitlab__ldap_user_filter|length>5 %}
    user_filter: '{{ gitlab__ldap_user_filter }}'
{% endif %}
    ## EE only
    group_base: ''
    admin_group: ''
    sync_ssh_keys: false

  # secondary: # 'secondary' is the GitLab 'provider ID' of second LDAP server
  #   label: 'LDAP'
  #   host: '_your_ldap_server'
  #   port: 389
  #   uid: 'sAMAccountName'
  #   bind_dn: '_the_full_dn_of_the_user_you_will_bind_with'
  #   password: '_the_password_of_the_bind_user'
  #   encryption: 'plain' # "start_tls" or "simple_tls" or "plain"
  #   verify_certificates: true
  #   smartcard_auth: false
  #   active_directory: true
  #   allow_username_or_email_login: false
  #   lowercase_usernames: false
  #   block_auto_created_users: false
  #   base: ''
  #   user_filter: ''
  #   ## EE only
  #   group_base: ''
  #   admin_group: ''
  #   sync_ssh_keys: false

EOS


{% endif %}

{% if gitlab__gitlab_rb_user_config is defined %}
{{ gitlab__gitlab_rb_user_config }}
{% endif %}
